{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"D:/Meta Melon Data/Schengen-Expert/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Meta Melon Data/Schengen-Expert/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../config/firebaseConfig\";\nimport { Button } from \"@mui/material\";\nexport default function GetDocss() {\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var arrOfData, q, querySnapshot;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              arrOfData = [];\n              q = query(collection(db, \"fares\"));\n              _context.next = 4;\n              return getDocs(q);\n\n            case 4:\n              querySnapshot = _context.sent;\n              querySnapshot.forEach(function (doc) {\n                // doc.data() is never undefined for query doc snapshots\n                arrOfData.push(doc.data());\n              });\n              setData(arrOfData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var sendData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var i;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              for (i = 0; i < data.length; i++) {}\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Button, {\n      onClick: function onClick() {\n        return getData();\n      },\n      children: \"Get Data\"\n    }), /*#__PURE__*/_jsx(Button, {\n      onClick: function onClick() {\n        return sendData();\n      },\n      children: \"Send Data\"\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}