{"ast":null,"code":"export function convertString(str) {\n  if (str) {\n    var temp = str.split(\"-\"),\n        i,\n        pretty;\n\n    for (i = 0; i < temp.length; i++) {\n      temp[i] = temp[i].charAt(0).toUpperCase() + temp[i].slice(1);\n    }\n\n    pretty = temp.join(\" \");\n    return pretty;\n  }\n} // const salt = 'wertyuiop123456765467890dfghjkjhgcv';\n\nconst salt = 'lkjhgfdsazxcvbnm0987654321poiuytrew';\nexport function encrypt(text) {\n  const textToChars = text => text.split(\"\").map(c => c.charCodeAt(0));\n\n  const byteHex = n => (\"0\" + Number(n).toString(16)).substr(-2);\n\n  const applySaltToChar = code => textToChars(salt).reduce((a, b) => a ^ b, code);\n\n  return text.split(\"\").map(textToChars).map(applySaltToChar).map(byteHex).join(\"\");\n}\nexport function decrypt(encoded) {\n  const textToChars = text => text.split(\"\").map(c => c.charCodeAt(0));\n\n  const applySaltToChar = code => textToChars(salt).reduce((a, b) => a ^ b, code);\n\n  return encoded.match(/.{1,2}/g).map(hex => parseInt(hex, 16)).map(applySaltToChar).map(charCode => String.fromCharCode(charCode)).join(\"\");\n}\n\nfunction randomString(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}