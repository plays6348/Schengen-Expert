{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport styles from '@/styles/book.module.css';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport emailjs from '@emailjs/browser';\nimport { TextField, InputAdornment, OutlinedInput, InputLabel, FormControl, ThemeProvider, Button, Slide, Typography, Divider, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, Skeleton } from '@mui/material';\nimport Layout from '@/components/layout';\nimport { theme } from '../../styles/theme';\nimport { decrypt } from 'utils/helpers';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/config/firebaseConfig';\nimport { convertString } from 'utils/helpers';\nexport default function BookNow() {\n  const router = useRouter();\n  const {\n    fareSlug\n  } = router.query;\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    name: '',\n    email: '',\n    phone: '',\n    returnDate: '',\n    deptDate: '',\n    budget: '',\n    siteName: \"Fast Holidays\",\n    inquiryLocation: \"User Sent inquiry by selecting the fare.\"\n  });\n  const {\n    0: sending,\n    1: setSending\n  } = useState();\n  const {\n    0: showDialog,\n    1: setShowDialog\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: selectedFare,\n    1: setSelectedFare\n  } = useState();\n\n  const getData = async id => {\n    const docRef = doc(db, 'fares', id);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setData(docSnap.data());\n    } else {\n      return;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (form.name || form.email || form.phone || form.returnDate || form.deptDate || form.budget) {\n      setSending(true);\n      emailjs.send('service_iodawml', 'template_mqvxf7a', _objectSpread(_objectSpread({}, form), selectedFare), 'tL_Vpyj5WxQRqs6ec').then(res => {\n        // console.log(res);\n        // setShowDialog({\n        //   title: 'Successfull',\n        //   msg: 'Inquiry sent successfully, We will call you for further processing.',\n        // });\n        router.push('/thankyou');\n        setSending(false);\n      }).catch(err => {\n        // console.log(err);\n        // setShowDialog({\n        //   title: 'Something went wrong',\n        //   msg: 'Inquiry not sent.',\n        // });\n        setSending(false);\n      });\n    } else {\n      // setShowDialog({\n      //   title: 'Error',\n      //   msg: 'Kindly fill the Form.',\n      // });\n      router.push('/thankyou');\n    }\n  };\n\n  const handleChange = (e, fieldName) => {\n    if (fieldName == 'phone') {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        phone: e\n      }));\n    } else {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        [fieldName]: e.target.value\n      }));\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      setSelectedFare({\n        dept: `${convertString(data.deptAirport.airport)} - ${data.deptAirport.airportCode} - ${convertString(data.deptAirport.city)}`,\n        dest: `${convertString(data.destAirport.airport)} - ${data.destAirport.airportCode} - ${convertString(data.destAirport.city)}`,\n        price: data.price,\n        airline: convertString(data.airline.name)\n      });\n    }\n  }, [data]);\n  useEffect(() => {\n    if (fareSlug) {\n      const id = decrypt(fareSlug);\n      getData(id);\n    }\n  }, [fareSlug]); // console.log(form);\n  // console.log(data);\n  // console.log({ ...form, ...selectedFare });\n\n  return /*#__PURE__*/_jsx(Layout, {\n    title: \"Book Ticket\",\n    children: /*#__PURE__*/_jsx(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.bookPage,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.gridSectionOne,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.selectedFare,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.selectedFare__header,\n              children: /*#__PURE__*/_jsx(Typography, {\n                variant: \"h5\",\n                sx: {\n                  color: 'white'\n                },\n                children: \"Selected Fare\"\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.selectedFare__body,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: styles.selectedFare__grid,\n                children: [/*#__PURE__*/_jsxs(Typography, {\n                  sx: {\n                    fontWeight: 'bolder'\n                  },\n                  children: [\"Departure Airport:\", ' ']\n                }), data ? /*#__PURE__*/_jsx(Typography, {\n                  children: `${convertString(data.deptAirport.airport)} - ${data.deptAirport.airportCode} - ${convertString(data.deptAirport.city)}`\n                }) : /*#__PURE__*/_jsx(Skeleton, {\n                  variant: \"text\"\n                })]\n              }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.selectedFare__grid,\n                children: [/*#__PURE__*/_jsxs(Typography, {\n                  sx: {\n                    fontWeight: 'bolder'\n                  },\n                  children: [\"Destination Airport:\", ' ']\n                }), data ? /*#__PURE__*/_jsx(Typography, {\n                  children: `${convertString(data.destAirport.airport)} - ${data.destAirport.airportCode} - ${convertString(data.destAirport.city)}`\n                }) : /*#__PURE__*/_jsx(Skeleton, {\n                  variant: \"text\"\n                })]\n              }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.selectedFare__grid,\n                children: [/*#__PURE__*/_jsxs(Typography, {\n                  sx: {\n                    fontWeight: 'bolder'\n                  },\n                  children: [\"Selected Airline:\", ' ']\n                }), data ?\n                /*#__PURE__*/\n                // <Typography>{convertString(data.airline.name)}</Typography>\n                _jsx(\"img\", {\n                  style: {\n                    width: '120px'\n                  },\n                  src: data.airline.img,\n                  alt: \"airline logo\"\n                }) : /*#__PURE__*/_jsx(Skeleton, {\n                  variant: \"text\"\n                })]\n              }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.selectedFare__grid,\n                children: [/*#__PURE__*/_jsxs(Typography, {\n                  sx: {\n                    fontWeight: 'bolder'\n                  },\n                  children: [\"Total Fare:\", ' ']\n                }), data ? /*#__PURE__*/_jsxs(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: 'red'\n                  },\n                  children: [\"from \\xA3\", data.price, \" incl. Tax\"]\n                }) : /*#__PURE__*/_jsx(Skeleton, {\n                  variant: \"text\"\n                })]\n              }), /*#__PURE__*/_jsx(Typography, {\n                variant: \"caption\",\n                sx: {\n                  opacity: '0.8'\n                },\n                children: \"Please Note: If the requested fare will not be available then we will offer you the best alternate fare.\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.book__img,\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: \"/assets/book.png\",\n              alt: \"book__image\"\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.customerDetails,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.customerDetails__header,\n            children: /*#__PURE__*/_jsx(Typography, {\n              variant: \"h5\",\n              sx: {\n                color: 'white'\n              },\n              children: \"Customer Details\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.customerDetails__bodyContainer,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.customerDetails__body,\n              children: [/*#__PURE__*/_jsx(TextField, {\n                size: \"small\",\n                label: \"Full Name\",\n                onChange: e => handleChange(e, 'name')\n              }), /*#__PURE__*/_jsx(TextField, {\n                size: \"small\",\n                label: \"Email\",\n                onChange: e => handleChange(e, 'email')\n              }), /*#__PURE__*/_jsx(MuiPhoneNumber, {\n                size: \"small\",\n                defaultCountry: 'gb' // regions={\"europe\"}\n                ,\n                onChange: value => handleChange(value, 'phone'),\n                variant: \"outlined\",\n                label: \"Phone Number\"\n              }), /*#__PURE__*/_jsx(TextField, {\n                size: \"small\",\n                label: \"Departure Date\",\n                type: \"date\",\n                onChange: e => handleChange(e, 'deptDate'),\n                InputLabelProps: {\n                  shrink: true\n                }\n              }), /*#__PURE__*/_jsx(TextField, {\n                size: \"small\",\n                label: \"Return Date\",\n                type: \"date\",\n                onChange: e => handleChange(e, 'returnDate'),\n                InputLabelProps: {\n                  shrink: true\n                }\n              }), /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                multiline: true,\n                size: \"small\",\n                label: \"Message\",\n                onChange: e => handleChange(e, 'msg'),\n                rows: 4\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Button, {\n            sx: {\n              margin: '0 1rem 1rem 1rem'\n            },\n            onClick: () => handleSubmit(),\n            disabled: sending || !data,\n            variant: \"contained\",\n            children: \"Book Now\"\n          })]\n        })]\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}